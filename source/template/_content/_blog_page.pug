include ../_blocks/_first-screen_block_blog

section.blog.clearfix
    aside.blog__left
        ul.blog__list
            li.blog__item.blog__item_active
                a.blog__link(href="#") Как быть начинающим разработчиком и не сойти с ума
            li.blog__item
                a.blog__link(href="#") Jade — препроцессор HTML
            li.blog__item
                a.blog__link(href="#") Самый необходимый набор Gulp - плагинов
            li.blog__item
                a.blog__link(href="#") Почему я выбрал Jade

    div.blog__right
        article.article
            h2.article__title Как быть начинающим разработчиком и не сойти с ума
            div.article__date 22 декабря 2016 года
            div.article__text
                p Не сравнивай
                p.
                    Первые месяцы начинающий разработчик сильно переживает, что в команде есть люди моложе или равные
                    по возрасту, но уже работающие гораздо эффективнее и знающие в разы больше. Сравнивать себя с ними
                    — тупиковый путь, и ни к чему хорошему он не приведёт. Гораздо лучше сравнивать себя сегодняшнего с
                    собой вчерашним. Если делаешь то, что ещё недавно считал слишком сложным для себя, то ты растёшь,
                    и это отлично.
                p Не отвлекайся
                p.
                    Как это обычно бывает: о, почитаю про grid’ы, потом зайду на ютуб, там вышел новый курс по
                    Gulp от Кантора, а потом в твиттере опубликовали ссылку на новую JS-библиотеку. Основы PHP, сделай
                    свой интернет-магазин на Ruby on Rails, новый курс по React…
                p.
                    В результате получается посредственный разработчик, который что-то где-то слышал,
                    но не имеет полноценного понимания и не в состоянии выдать качественный результат.
                    Решением является составление детального плана обучения. Это не значит, что не надо
                    читать новости, просто стоит сократить количество и внимание, уделяемое им. Рекомендую
                    посмотреть это. Особенно полезно про концентрацию.Вернёмся к плану. Для фронтенд-разработчиков
                    последовательность очевидна — качественная адаптивная вёрстка, вся теория по ES 2015, можно
                    немного jQuery и уже только потом популярные фреймворки. Не стоит гнаться за модой и
                    спешить изучать тот же React. Почему? На этот вопрос уже неплохо ответили тут. Многие из
                    моих знакомых начинали другим путём и всё равно приходили к тому, что надо последовательно обучаться.
                p Прими тот факт, что ты будешь много косячить
                p.
                    Тебе предстоит ошибаться и ошибаться много. Недавно я испортил репозиторий
                    с недельной работой своих товарищей. Можно только представить мой уровень «радости».
                    К счастью, коллеги смогли восстановить всё без долгих затрат времени и сил.

        article.article
            h2.article__title Jade — препроцессор HTML
            div.article__date 22 ноября 2016 года
            div.article__text
                p Пересмотрел свое отношение к препроцессорам HTML вроде HAML, Slim, Jade.
                p.
                    Сейчас использую Jade, который, к сожалению, изменил столь прекрасное название
                    из-за юридических заморочек и был переименован в Pug. Итак впечатления наилучшие,
                    работать стало удобнее. Теперь вместо разворачивания тегов с помощью Emmet, подобный
                    код просто записывается в файлики .jade и обрабатывается gulp в полноценный .html.
                    Также в качестве эксперимента синтаксис SCSS изменен на SASS, тоже использующий индентацию.
                p.
                    Под Ruby Slim будет получше HAML и уж точно в разы лучше ERB (HTML). Также как и в случае
                    с SASS/LESS/Stylus нужно уже отлично знать HTML, прежде чем приступать к препроцессорам.

    include ../_blocks/_footer

